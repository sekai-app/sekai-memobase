name: test&build

on:
  merge_group:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'
    paths:
      - 'src/server/api/**'
      - '!src/server/api/**/*.md'
  pull_request:
    branches:
      - main
      - dev
    paths:
      - 'src/server/api/**'
      - '!src/server/api/**/*.md'


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Tests on ${{ matrix.os }} for ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: [3.11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    permissions: 
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        working-directory: ./src/server/api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Start containers
        working-directory: ./src/server
        run: |
          cp .env.example .env
          cp api/config.yaml.example api/config.yaml
          sh script/up-dev.sh &
      - name: Wait for containers to start
        working-directory: ./src/server
        run: |
          until docker compose exec memobase-server-db pg_isready -U $DATABASE_USER -d $DATABASE_NAME; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done
      - name: Test with pytest
        working-directory: ./src/server/api
        run: |
          cp .env.example .env
          pytest --junit-xml=junit/test-results-${{ matrix.python-version }}.xml --cov=. --cov-report=xml:coverage-${{ matrix.python-version }}.xml tests/ -s -v
      - name: Upload pytest test results and coverage
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: |
            ./src/server/api/junit/test-results-${{ matrix.python-version }}.xml
            ./src/server/api/coverage-${{ matrix.python-version }}.xml
        if: ${{ always() }}
      - name: Stop containers
        working-directory: ./src/server
        if: ${{ always() }}
        run: |
          docker compose down
